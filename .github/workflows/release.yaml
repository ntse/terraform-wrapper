name: Release

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed

concurrency:
  group: release
  cancel-in-progress: true

permissions:
  contents: write
  actions: read

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: binaries
          path: dist/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Read version from artifact
        id: version
        run: |
          set -euo pipefail
          VERSION=$(cat dist/VERSION)
          echo "Release version: $VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Validate release tag
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          set -euo pipefail
          if [[ ! "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Artifact version $VERSION is not a semantic tag"
            exit 1
          fi
          git fetch --tags
          if ! git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION not found in repository"
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          generate_release_notes: true
          files: |
            dist/*.tar.gz
            dist/SHA256SUMS
            dist/VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
